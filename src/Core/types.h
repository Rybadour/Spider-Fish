// Time type
typedef struct time {
  int totalTicks;
  int deltaTicks;
} time_t;

// used at compile time to generate unique type identifiers
int types_unique_id = 0;

// SDL enum wrappers

class ModKey {
  enum Any {
  None   = KMOD_NONE,
  LShift = KMOD_LSHIFT,
  RShift = KMOD_RSHIFT,
  LCtrl  = KMOD_LCTRL,
  RCtrl  = KMOD_RCTRL,
  LAlt   = KMOD_LALT,
  RAlt   = KMOD_RALT,
  LMeta  = KMOD_LMETA,
  RMeta  = KMOD_RMETA,
  Num    = KMOD_NUM,
  Caps   = KMOD_CAPS,
  Mode   = KMOD_MODE,
  Ctrl   = KMOD_CTRL,
  Shift  = KMOD_SHIFT,
  Alt    = KMOD_ALT,
  Meta   = KMOD_META
  }
};  

class Key {
public:
  enum Any {     
  Backspace   = SDLK_BACKSPACE,
  Tab         = SDLK_TAB,
  Clear       = SDLK_CLEAR,
  Return      = SDLK_RETURN,
  Pause       = SDLK_PAUSE,
  Escape      = SDLK_ESCAPE,
  Space       = SDLK_SPACE,
  Exclaim     = SDLK_EXCLAIM,
  QuoteDBL    = SDLK_QUOTEDBL,
  Hash        = SDLK_HASH,
  Dollar      = SDLK_DOLLAR,
  Ampersand   = SDLK_AMPERSAND,
  Quote       = SDLK_QUOTE,
  LeftParen   = SDLK_LEFTPAREN,
  RightParen  = SDLK_RIGHTPAREN,
  Asterisk    = SDLK_ASTERISK,
  Plus        = SDLK_PLUS,
  Comma       = SDLK_COMMA,
  Minus       = SDLK_MINUS,
  Period      = SDLK_PERIOD,
  Slash       = SDLK_SLASH,
  _0          = SDLK_0,
  _1          = SDLK_1,
  _2          = SDLK_2,
  _3          = SDLK_3,
  _4          = SDLK_4,
  _5          = SDLK_5,
  _6          = SDLK_6,
  _7          = SDLK_7,
  _8          = SDLK_8,
  _9          = SDLK_9,
  Colon       = SDLK_COLON,
  Semicolon   = SDLK_SEMICOLON,
  Less        = SDLK_LESS,
  Equals      = SDLK_EQUALS,
  Greater     = SDLK_GREATER,
  Question    = SDLK_QUESTION,
  At          = SDLK_AT,
  LeftBracket = SDLK_LEFTBRACKET,
  Backslash   = SDLK_BACKSLASH,
  RightBracket= SDLK_RIGHTBRACKET,
  Caret       = SDLK_CARET,
  Underscore  = SDLK_UNDERSCORE,
  Backquote   = SDLK_BACKQUOTE,
  A           = SDLK_a,
  B           = SDLK_b,
  C           = SDLK_c,
  D           = SDLK_d,
  E           = SDLK_e,
  F           = SDLK_f,
  G           = SDLK_g,
  H           = SDLK_h,
  I           = SDLK_i,
  J           = SDLK_j,
  K           = SDLK_k,
  L           = SDLK_l,
  M           = SDLK_m,
  N           = SDLK_n,
  O           = SDLK_o,
  P           = SDLK_p,
  Q           = SDLK_q,
  R           = SDLK_r,
  S           = SDLK_s,
  T           = SDLK_t,
  U           = SDLK_u,
  V           = SDLK_v,
  W           = SDLK_w,
  X           = SDLK_x,
  Y           = SDLK_y,
  Z           = SDLK_z,
  Delete      = SDLK_DELETE,
  World_0     = SDLK_WORLD_0,
  World_1     = SDLK_WORLD_1,
  World_2     = SDLK_WORLD_2,
  World_3     = SDLK_WORLD_3,
  World_4     = SDLK_WORLD_4,
  World_5     = SDLK_WORLD_5,
  World_6     = SDLK_WORLD_6,
  World_7     = SDLK_WORLD_7,
  World_8     = SDLK_WORLD_8,
  World_9     = SDLK_WORLD_9,
  World_10    = SDLK_WORLD_10,
  World_11    = SDLK_WORLD_11,
  World_12    = SDLK_WORLD_12,
  World_13    = SDLK_WORLD_13,
  World_14    = SDLK_WORLD_14,
  World_15    = SDLK_WORLD_15,
  World_16    = SDLK_WORLD_16,
  World_17    = SDLK_WORLD_17,
  World_18    = SDLK_WORLD_18,
  World_19    = SDLK_WORLD_19,
  World_20    = SDLK_WORLD_20,
  World_21    = SDLK_WORLD_21,
  World_22    = SDLK_WORLD_22,
  World_23    = SDLK_WORLD_23,
  World_24    = SDLK_WORLD_24,
  World_25    = SDLK_WORLD_25,
  World_26    = SDLK_WORLD_26,
  World_27    = SDLK_WORLD_27,
  World_28    = SDLK_WORLD_28,
  World_29    = SDLK_WORLD_29,
  World_30    = SDLK_WORLD_30,
  World_31    = SDLK_WORLD_31,
  World_32    = SDLK_WORLD_32,
  World_33    = SDLK_WORLD_33,
  World_34    = SDLK_WORLD_34,
  World_35    = SDLK_WORLD_35,
  World_36    = SDLK_WORLD_36,
  World_37    = SDLK_WORLD_37,
  World_38    = SDLK_WORLD_38,
  World_39    = SDLK_WORLD_39,
  World_40    = SDLK_WORLD_40,
  World_41    = SDLK_WORLD_41,
  World_42    = SDLK_WORLD_42,
  World_43    = SDLK_WORLD_43,
  World_44    = SDLK_WORLD_44,
  World_45    = SDLK_WORLD_45,
  World_46    = SDLK_WORLD_46,
  World_47    = SDLK_WORLD_47,
  World_48    = SDLK_WORLD_48,
  World_49    = SDLK_WORLD_49,
  World_50    = SDLK_WORLD_50,
  World_51    = SDLK_WORLD_51,
  World_52    = SDLK_WORLD_52,
  World_53    = SDLK_WORLD_53,
  World_54    = SDLK_WORLD_54,
  World_55    = SDLK_WORLD_55,
  World_56    = SDLK_WORLD_56,
  World_57    = SDLK_WORLD_57,
  World_58    = SDLK_WORLD_58,
  World_59    = SDLK_WORLD_59,
  World_60    = SDLK_WORLD_60,
  World_61    = SDLK_WORLD_61,
  World_62    = SDLK_WORLD_62,
  World_63    = SDLK_WORLD_63,
  World_64    = SDLK_WORLD_64,
  World_65    = SDLK_WORLD_65,
  World_66    = SDLK_WORLD_66,
  World_67    = SDLK_WORLD_67,
  World_68    = SDLK_WORLD_68,
  World_69    = SDLK_WORLD_69,
  World_70    = SDLK_WORLD_70,
  World_71    = SDLK_WORLD_71,
  World_72    = SDLK_WORLD_72,
  World_73    = SDLK_WORLD_73,
  World_74    = SDLK_WORLD_74,
  World_75    = SDLK_WORLD_75,
  World_76    = SDLK_WORLD_76,
  World_77    = SDLK_WORLD_77,
  World_78    = SDLK_WORLD_78,
  World_79    = SDLK_WORLD_79,
  World_80    = SDLK_WORLD_80,
  World_81    = SDLK_WORLD_81,
  World_82    = SDLK_WORLD_82,
  World_83    = SDLK_WORLD_83,
  World_84    = SDLK_WORLD_84,
  World_85    = SDLK_WORLD_85,
  World_86    = SDLK_WORLD_86,
  World_87    = SDLK_WORLD_87,
  World_88    = SDLK_WORLD_88,
  World_89    = SDLK_WORLD_89,
  World_90    = SDLK_WORLD_90,
  World_91    = SDLK_WORLD_91,
  World_92    = SDLK_WORLD_92,
  World_93    = SDLK_WORLD_93,
  World_94    = SDLK_WORLD_94,
  World_95    = SDLK_WORLD_95,
  Kp0         = SDLK_KP0,
  Kp1         = SDLK_KP1,
  Kp2         = SDLK_KP2,
  Kp3         = SDLK_KP3,
  Kp4         = SDLK_KP4,
  Kp5         = SDLK_KP5,
  Kp6         = SDLK_KP6,
  Kp7         = SDLK_KP7,
  Kp8         = SDLK_KP8,
  Kp9         = SDLK_KP9,
  Kp_Period   = SDLK_KP_PERIOD,
  Kp_Divide   = SDLK_KP_DIVIDE,
  Kp_Multiply = SDLK_KP_MULTIPLY,
  Kp_Minus    = SDLK_KP_MINUS,
  Kp_Plus     = SDLK_KP_PLUS,
  Kp_Enter    = SDLK_KP_ENTER,
  Kp_Equals   = SDLK_KP_EQUALS,
  Up          = SDLK_UP,
  Down        = SDLK_DOWN,
  Right       = SDLK_RIGHT,
  Left        = SDLK_LEFT,
  Insert      = SDLK_INSERT,
  Home        = SDLK_HOME,
  End         = SDLK_END,
  Pageup      = SDLK_PAGEUP,
  Pagedown    = SDLK_PAGEDOWN,
  F1          = SDLK_F1,
  F2          = SDLK_F2,
  F3          = SDLK_F3,
  F4          = SDLK_F4,
  F5          = SDLK_F5,
  F6          = SDLK_F6,
  F7          = SDLK_F7,
  F8          = SDLK_F8,
  F9          = SDLK_F9,
  F10         = SDLK_F10,
  F11         = SDLK_F11,
  F12         = SDLK_F12,
  F13         = SDLK_F13,
  F14         = SDLK_F14,
  F15         = SDLK_F15,
  NumLock     = SDLK_NUMLOCK,
  CapsLock    = SDLK_CAPSLOCK,
  ScrollLock  = SDLK_SCROLLOCK,
  RShift      = SDLK_RSHIFT,
  LShift      = SDLK_LSHIFT,
  RCtrl       = SDLK_RCTRL,
  LCtrl       = SDLK_LCTRL,
  RAlt        = SDLK_RALT,
  LAlt        = SDLK_LALT,
  RMeta       = SDLK_RMETA,
  LMeta       = SDLK_LMETA,
  LSuper      = SDLK_LSUPER,
  RSuper      = SDLK_RSUPER,
  Mode        = SDLK_MODE,
  Compose     = SDLK_COMPOSE,
  Help        = SDLK_HELP,
  Print       = SDLK_PRINT,
  SysReq      = SDLK_SYSREQ,
  Break       = SDLK_BREAK,
  Menu        = SDLK_MENU,
  Power       = SDLK_POWER,
  Euro        = SDLK_EURO,
  Undo        = SDLK_UNDO,
  }
};

class Button {
public:
  enum Any {
  Left      = SDL_BUTTON_LEFT,
  Right     = SDL_BUTTON_RIGHT,
  Middle    = SDL_BUTTON_MIDDLE,
  WheelUp   = SDL_BUTTON_WHEELUP,
  WheelDown = SDL_BUTTON_WHEELDOWN
  };
};